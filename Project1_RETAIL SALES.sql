CREATE DATABASE SQL_PROJECT1;
USE SQL_PROJECT1;
-- TABLE CREATION
CREATE TABLE RETAIL_SALES(
transactions_id	INT PRIMARY KEY,
sale_date DATE,
sale_time TIME,
customer_id	INT,
gender	VARCHAR(100),
age	INT,
category VARCHAR(100),	
quantiy	INT,
price_per_unit INT,	
cogs FLOAT,
total_sale FLOAT
); 
-- DATA CLEANING
SELECT * FROM RETAIL_SALES WHERE
TRANSACTIONS_ID IS NULL or
SALE_DATE IS NULL OR 
SALE_TIME IS NULL OR
CUSTOMER_ID IS NULL OR
GENDER IS NULL or
AGE IS NULL OR 
CATEGORY IS NULL OR
QUANTIY IS NULL OR
PRICE_PER_UNIT IS NULL OR
COGS IS NULL or
TOTAL_SALE IS NULL;
-- DATA EXPLORATION
-- TOTAL SALES
SELECT COUNT(*) FROM RETAIL_SALES;
-- UNIQUE CUSTOMERS
SELECT COUNT(DISTINCT CUSTOMER_ID ) FROM RETAIL_SALES;
-- DISTINCT CATEGORIES
SELECT DISTINCT CATEGORY FROM RETAIL_SALES;
-- DATA ANALYSIS AND BUSINESS PROBLEMS
-- 1. RETRIEVING THE SALES MADE ONN 2022-11-05
SELECT * FROM RETAIL_SALES WHERE SALE_DATE='2022-11-05';

-- 2. RETRIEVING ALL TRANSACTIONS WHERE CATEGORY IS CLOTHING AND QUANTITY SOLD IS MORE THAN 10 IN NOV MONTH 2022
SELECT category, SUM(quantiy) AS total_quantity
FROM RETAIL_SALES
WHERE category = 'Clothing'
  AND MONTH(sale_date) = 11
  AND YEAR(sale_date) = 2022
GROUP BY category
HAVING SUM(quantiy) >= 10; 
SHOW ERRORS; 

-- 3. CALCULATING TOTAL SALES FOR EACH CATEGORY
SELECT CATEGORY,SUM(TOTAL_SALE) AS SALES
FROM RETAIL_SALES
GROUP BY CATEGORY ORDER BY SALES  DESC;

-- 4. AVERAGE AGE OF CUSTOMERS PURCHASED FROM BEAUTY CATEGORY
SELECT CATEGORY,ROUND(AVG(AGE),2)
FROM RETAIL_SALES 
GROUP BY CATEGORY HAVING CATEGORY='BEAUTY';

-- 5. TRANSACTIONS WHERE TOTAL SALES IS GREATER THAN 1000
SELECT * FROM RETAIL_SALES WHERE TOTAL_SALE>=1000;

-- 6. total number of transaction made by each gender in each categrory
select category,gender,sum(transactions_id) from retail_sales group by category,gender order by category asc;

-- 7. AVERAGE SALES OF EACH MONTH  AND BEST SELLING MONTH
WITH XX AS (SELECT YEAR(SALE_DATE),MONTH(SALE_DATE),ROUND(AVG(TOTAL_SALE),2) ,
RANK() OVER(PARTITION BY YEAR(SALE_DATE)ORDER BY AVG(TOTAL_SALE) DESC) AS RR
FROM RETAIL_SALES 
GROUP BY YEAR(SALE_DATE),MONTH(SALE_DATE))
SELECT * FROM XX WHERE RR=1;

-- 8.  5 CUSTOMERS WITH HIGHEST TOTAL SALES
SELECT CUSTOMER_ID,SUM(TOTAL_SALE) FROM RETAIL_SALES GROUP BY CUSTOMER_ID ORDER BY SUM(TOTAL_SALE) DESC LIMIT 5;

-- 9. CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY
SELECT CATEGORY,COUNT(DISTINCT CUSTOMER_ID) FROM RETAIL_SALES GROUP BY CATEGORY;

-- 10. TO CREATE EACH SHIFT AND NUMBER OF ORDERS
with xx as (SELECT *  ,
	case 
     when extract(hour from sale_time) < 12 then 'Morning'
     when extract(hour from sale_time) between 12 and 17 then 'afternoon'
	 else 'evening'
    end as shift
FROM RETAIL_SALES)
select shift, count(*) from xx group by shift;


